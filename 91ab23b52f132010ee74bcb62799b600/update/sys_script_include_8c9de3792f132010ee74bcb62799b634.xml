<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.RestrictedDataUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RestrictedDataUtils</name>
        <script><![CDATA[var RestrictedDataUtils = Class.create();
RestrictedDataUtils.prototype = {
    initialize: function() {
    },
	
	checkSSN: function(strInput, needToMask){		
		var regexSSN = new RegExp('(((?!(000|666))([0-8][0-9][0-9]))-((?!00)([0-9]{2}))-((?!0000)([0-9]{4})))|((987)-(65)-(432)[0-9])', 'g');		
		var found = regexSSN.test(strInput);			
		if (!needToMask) {
			//only return status of whether restricted data is found if data does not need to be masked
			gs.info('checkSSN: only return status of whether restricted data is found if data does not need to be masked');
			return (found);
		}		
		else if (found) {
			//data needs to be masked and restricted data found, go ahead and replace with placeholder
			var strProcessedData = strInput;
			gs.info('checkSSN: data needs to be masked and restricted data found, go ahead and replace with placeholder');
			return strProcessedData.replace(regexSSN, 'SSN XXX-XX-XXXX');
		}
		else {
			//data needs to be masked and NO restricted data found, return original input string
			gs.info('checkSSN: data needs to be masked and NO restricted data found, return original input string');
			return strInput;
		}
	},
	
	checkPassword: function(strInput, needToMask){		
		var regexPassword = new RegExp('((Password|PW|PWD)(\\#)?\\s)(?!Reset|From|Has|Change|Notification|Failure)((\\w|[-\\._\\@\\!\\#])+)', 'g');	
		var found = regexPassword.test(strInput);			
		if (!needToMask) {
			//only return status of whether restricted data is found if data does not need to be masked
			gs.info('checkPassword: only return status of whether restricted data is found if data does not need to be masked');
			return (found);
		}		
		else if (found) {
			//data needs to be masked and restricted data found, go ahead and replace with placeholder
			var strProcessedData = strInput;
			gs.info('checkPassword: data needs to be masked and restricted data found, go ahead and replace with placeholder');
			return strProcessedData.replace(regexPassword, '<masked password>');
		}
		else {
			//data needs to be masked and NO restricted data found, return original input string
			gs.info('checkPassword: data needs to be masked and NO restricted data found, return original input string');
			return strInput;
		}		
	},
	
	checkPIN: function(strInput, needToMask){
		var regexPIN = new RegExp('((PIN|Acct|Account)(\\#)?\\s)((\\d)+)', 'g');		
		var found = regexPIN.test(strInput);			
		if (!needToMask) {
			//only return status of whether restricted data is found if data does not need to be masked
			gs.info('checkPIN: only return status of whether restricted data is found if data does not need to be masked');
			return (found);
		}		
		else if (found) {
			//data needs to be masked and restricted data found, go ahead and replace with placeholder
			var strProcessedData = strInput;
			gs.info('checkPIN: data needs to be masked and restricted data found, go ahead and replace with placeholder');
			return strProcessedData.replace(regexPIN, 'PIN XXXX');
		}
		else {
			//data needs to be masked and NO restricted data found, return original input string
			gs.info('checkPIN: data needs to be masked and NO restricted data found, return original input string');
			return strInput;
		}		
	},
	
	checkCC: function(strInput, needToMask){		
		var regexCC = new RegExp('(((4\\d{12,17})|(4\\d{3}[\\-\\s]\\d{4}[\\-\\s]\\d{4}[\\-\\s]\\d{4}\\d{0,3}))|(3[47])((\\d{11,18})|(\\d{2}[\\-\\s]\\d{6}[\\-\\s]\\d{5}))|((5[0-8])|(6304|6759|6761|6762|6763))((\\d{12,18})|(\\d{0,2}[\\-\\s]\\d{4}[\\-\\s]\\d{4}[\\-\\s]\\d{4}\\d{0,3}))|(((352[8-9])|(35[3-8][0-9]))((\\d{12,15})|([\\-\\s]\\d{4}[\\-\\s]\\d{4}[\\-\\s]\\d{4}\\d{0,3})))|(30[0-5]|36|54)((\\d{11,14})|(\\d{0,2}[\\-\\s]\\d{4}[\\-\\s]\\d{4}[\\-\\s]\\d{4})|(\\d{0,2}[\\-\\s]\\d{6}[\\-\\s]\\d{4}))|(6011|622[1-9]|64[4-9]|65) ((\\d{9,18})|(\\d{0,3}[\\-\\s]\\d{4}[\\-\\s]\\d{4}[\\-\\s]\\d{4}\\d{0,3})))', 'g');
		var found = regeregexCC.test(strInput);			
		if (!needToMask) {
			//only return status of whether restricted data is found if data does not need to be masked
			gs.info('checkCC: only return status of whether restricted data is found if data does not need to be masked');
			return (found);
		}		
		else if (found) {
			//data needs to be masked and restricted data found, go ahead and replace with placeholder
			var strProcessedData = strInput;
			gs.info('checkCC: data needs to be masked and restricted data found, go ahead and replace with placeholder');
			return strProcessedData.replace(regexCC, '<masked credit card>');
		}
		else {
			//data needs to be masked and NO restricted data found, return original input string
			gs.info('checkCC: data needs to be masked and NO restricted data found, return original input string');
			return strInput;
		}		
	},
		

    type: 'RestrictedDataUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-04-04 20:36:57</sys_created_on>
        <sys_id>8c9de3792f132010ee74bcb62799b634</sys_id>
        <sys_mod_count>39</sys_mod_count>
        <sys_name>RestrictedDataUtils</sys_name>
        <sys_package display_value="RestrictedDataUtils" source="91ab23b52f132010ee74bcb62799b600">91ab23b52f132010ee74bcb62799b600</sys_package>
        <sys_policy/>
        <sys_scope display_value="RestrictedDataUtils">91ab23b52f132010ee74bcb62799b600</sys_scope>
        <sys_update_name>sys_script_include_8c9de3792f132010ee74bcb62799b634</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-04-06 15:38:16</sys_updated_on>
    </sys_script_include>
</record_update>
